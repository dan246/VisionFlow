version: "3.0"

services:

  # # Database
  db:
    container_name: 'db'
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vision_notify
    ports:
      - "5432:5432"
    volumes:
      - ./db/:/var/lib/postgresql/data/
    networks:
      - service-networks

  # # 後台
  backend:
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: always
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
    volumes:
      - ./web:/app
    ports:
      - "5000:5000"
    # command: sh -c "python app.py"
    command: gunicorn -w 4 -b 0.0.0.0:5000 app:app

    # command: sh -c "sleep 100000"
    networks:
      - service-networks

  # # redis 攝影機控制分配
  camera_ctrl:
    container_name: camera_ctrl_dev
    image: danlee01633060/camera_ctrl:lastest
    build:
      context: ./camera_ctrler
      dockerfile: cameractrlDockerfile
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - backend
    volumes:
      - ./object_recognition/saved_images/stream/:/app/stream
      - ./camera_ctrler:/app
      - ./rtsp_test/frames/:/app/image
    environment:
      - SERVERIP=http://backend:5000
    ports:
      - "15440:5000"
    # command: sh -c "flask run --no-debugger --host 0.0.0.0"
    command: gunicorn -w 4 -b 0.0.0.0:5000 app:app
    networks:
      - service-networks

  # 鏡頭影像辨識
  objectrecognition:
    container_name: object_recognition
    image: danlee01633060/object_recognition:latest
    build:
      context: ./object_recognition
      dockerfile: objectrecognitionDockerfile
    user: "0:0"
    restart: always
    depends_on:
      - camera_ctrl
    stdin_open: true
    tty: true
    volumes:
      - ./rtsp_test/frames/:/app/frames
      - ./object_recognition:/app
      - ./AImodels/object_recognition/model:/app/model
      - ./AImodels/object_recognition/tmp:/app/tmp
    environment:
      - CAMERA_SERVICE_URL=http://camera_ctrl:5000
      - API_SERVICE_URL=http://backend:5000
      - TOKEN=hf_xxxxxx
      - DATASETNAME=danlee01633060/imgtest
    privileged: true
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [ gpu ]
    command: sh -c "sleep 30666"
    # command: python appv2.py`
    networks:
      - service-networks

networks:
  service-networks:
    driver: bridge


